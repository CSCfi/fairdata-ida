{"version":3,"sources":["webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/marked/lib/marked.js","webpack:///./node_modules/dompurify/dist/purify.js"],"names":["module","exports","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","i","modules","mediaQuery","alreadyImportedModules","length","id","push","listToStyles","parentId","styles","newStyles","part","css","media","parts","__webpack_require__","d","__webpack_exports__","addStylesClient","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","type","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","bind","setAttribute","ssrId","styleSheet","cssText","firstChild","createTextNode","newObj","textStore","replaceText","index","replacement","filter","Boolean","cssNode","childNodes","insertBefore","global","root","block","newline","code","fences","hr","heading","nptable","blockquote","html","def","table","lheading","paragraph","text","Lexer","tokens","links","Object","create","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","replace","getRegex","bullet","_tag","_comment","merge","lex","src","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","tag","l","isordered","istask","ischecked","exec","substring","rtrim","lang","trim","depth","header","splitCells","align","split","cells","ordered","start","match","indexOf","RegExp","smartLists","slice","charAt","undefined","task","checked","sanitize","pre","sanitizer","href","title","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","_","n","String","fromCharCode","parseInt","regex","opt","name","val","cleanUrl","base","prot","decodeURIComponent","e","originIndependentUrl","baseUrls","resolveUrl","encodeURI","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","Math","random","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","body","listitem","checkbox","tablerow","tablecell","flags","baseUrl","parse","inlineText","reverse","tok","pop","peek","parseText","row","cell","errMsg","silent","console","log","value","hasOwnProperty","originalSlug","&","<",">","\"","'","target","key","arguments","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","callback","pending","done","err","message","setOptions","getDefaults","parser","lexer","inlineLexer","window","freeze$1","freeze","x","svg","svgFilters","mathMl","freeze$2","html$1","svg$1","mathMl$1","xml","setPrototypeOf","apply$1","Reflect","apply","addToSet","set","array","element","lcElement","isFrozen","clone","object","newObject","property","fun","thisValue","args","seal","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","constructor","_toConsumableArray","arr","Array","isArray","arr2","from","arraySlice","getGlobal","_createTrustedTypesPolicy","trustedTypes","createPolicy","suffix","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","error","warn","createDOMPurify","DOMPurify","version","removed","nodeType","isSupported","originalDocument","useDOMParser","removeTitle","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","TrustedTypes","template","ownerDocument","trustedTypesPolicy","emptyHTML","_document","implementation","createNodeIterator","createDocumentFragment","importNode","hooks","createHTMLDocument","documentMode","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","ADD_URI_SAFE_ATTR","_forceRemove","node","outerHTML","_removeAttribute","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","parseFromString","documentElement","_doc","firstElementChild","innerHTML","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isNode","nodeName","_executeHook","entryPoint","currentNode","data","forEach","hook","_sanitizeElements","elm","textContent","attributes","tagName","allowedTags","insertAdjacentHTML","htmlToInsert","cloneNode","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","namespaceURI","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","importedNode","oldNode","returnNode","TypeError","toStaticHTML","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","factory"],"mappings":"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","file":"vue-5.js","sourcesContent":["\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace(/\\{2,\\}/g, '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger () {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function (value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.DOMPurify = factory());\n}(this, (function () { 'use strict';\n\nvar freeze$1 = Object.freeze || function (x) {\n  return x;\n};\n\nvar html = freeze$1(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nvar svg = freeze$1(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\nvar svgFilters = freeze$1(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\nvar mathMl = freeze$1(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\nvar text = freeze$1(['#text']);\n\nvar freeze$2 = Object.freeze || function (x) {\n  return x;\n};\n\nvar html$1 = freeze$2(['accept', 'action', 'align', 'alt', 'autocomplete', 'background', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'coords', 'crossorigin', 'datetime', 'default', 'dir', 'disabled', 'download', 'enctype', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'integrity', 'ismap', 'label', 'lang', 'list', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'multiple', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\nvar svg$1 = freeze$2(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\nvar mathMl$1 = freeze$2(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\nvar xml = freeze$2(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nvar hasOwnProperty = Object.hasOwnProperty;\nvar setPrototypeOf = Object.setPrototypeOf;\n\nvar _ref$1 = typeof Reflect !== 'undefined' && Reflect;\nvar apply$1 = _ref$1.apply;\n\nif (!apply$1) {\n  apply$1 = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  var l = array.length;\n  while (l--) {\n    var element = array[l];\n    if (typeof element === 'string') {\n      var lcElement = element.toLowerCase();\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!Object.isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = {};\n\n  var property = void 0;\n  for (property in object) {\n    if (apply$1(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\nvar seal = Object.seal || function (x) {\n  return x;\n};\n\nvar MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nvar ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nvar DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nvar ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nvar IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nvar IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nvar ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g // eslint-disable-line no-control-regex\n);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _ref = typeof Reflect !== 'undefined' && Reflect;\nvar apply = _ref.apply;\n\nvar arraySlice = Array.prototype.slice;\nvar freeze = Object.freeze;\n\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nvar _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  var suffix = null;\n  var ATTR_NAME = 'data-tt-policy-suffix';\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML: function createHTML(html$$1) {\n        return html$$1;\n      }\n    });\n  } catch (error) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '1.0.10';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  var originalDocument = window.document;\n  var useDOMParser = false;\n  var removeTitle = false;\n\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      Text = window.Text,\n      Comment = window.Comment,\n      DOMParser = window.DOMParser,\n      TrustedTypes = window.TrustedTypes;\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var trustedTypesPolicy = _createTrustedTypesPolicy(TrustedTypes, originalDocument);\n  var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      getElementsByTagName = _document.getElementsByTagName,\n      createDocumentFragment = _document.createDocumentFragment;\n  var importNode = originalDocument.importNode;\n\n\n  var hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;\n\n  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n      ERB_EXPR$$1 = ERB_EXPR,\n      DATA_ATTR$$1 = DATA_ATTR,\n      ARIA_ATTR$$1 = ARIA_ATTR,\n      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(svgFilters), _toConsumableArray(mathMl), _toConsumableArray(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(mathMl$1), _toConsumableArray(xml)));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for jQuery's $() factory? */\n  var SAFE_FOR_JQUERY = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify. */\n  var RETURN_DOM_IMPORT = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  var SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  var IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = addToSet({}, ['audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n      cfg = {};\n    }\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(text)));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html);\n        addToSet(ALLOWED_ATTR, html$1);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl);\n        addToSet(ALLOWED_ATTR, mathMl$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  var _forceRemove = function _forceRemove(node) {\n    DOMPurify.removed.push({ element: node });\n    try {\n      node.parentNode.removeChild(node);\n    } catch (error) {\n      node.outerHTML = emptyHTML;\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      DOMPurify.removed.push({\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (error) {\n      DOMPurify.removed.push({\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name);\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc = void 0;\n    var leadingWhitespace = void 0;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      var matches = dirty.match(/^[\\s]+/);\n      leadingWhitespace = matches && matches[0];\n      if (leadingWhitespace) {\n        dirty = dirty.slice(leadingWhitespace.length);\n      }\n    }\n\n    /* Use DOMParser to workaround Firefox bug (see comment below) */\n    if (useDOMParser) {\n      try {\n        doc = new DOMParser().parseFromString(dirty, 'text/html');\n      } catch (error) {}\n    }\n\n    /* Remove title to fix a mXSS bug in older MS Edge */\n    if (removeTitle) {\n      addToSet(FORBID_TAGS, ['title']);\n    }\n\n    /* Otherwise use createHTMLDocument, because DOMParser is unsafe in\n    Safari (see comment below) */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createHTMLDocument('');\n      var _doc = doc,\n          body = _doc.body;\n\n      body.parentNode.removeChild(body.parentNode.firstElementChild);\n      body.outerHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    }\n\n    if (leadingWhitespace) {\n      doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n  };\n\n  // Firefox uses a different parser for innerHTML rather than\n  // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)\n  // which means that you *must* use DOMParser, otherwise the output may\n  // not be safe if used in a document.write context later.\n  //\n  // So we feature detect the Firefox bug and use the DOMParser if necessary.\n  //\n  // MS Edge, in older versions, is affected by an mXSS behavior. The second\n  // check tests for the behavior and fixes it if necessary.\n  if (DOMPurify.isSupported) {\n    (function () {\n      try {\n        var doc = _initDocument('<svg><p><style><img src=\"</style><img src=x onerror=1//\">');\n        if (doc.querySelector('svg img')) {\n          useDOMParser = true;\n        }\n      } catch (error) {}\n    })();\n\n    (function () {\n      try {\n        var doc = _initDocument('<x/><title>&lt;/title&gt;&lt;img&gt;');\n        if (doc.querySelector('title').innerHTML.match(/<\\/title/)) {\n          removeTitle = true;\n        }\n      } catch (error) {}\n    })();\n  }\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n      return NodeFilter.FILTER_ACCEPT;\n    }, false);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  var _isClobbered = function _isClobbered(elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function') {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  var _isNode = function _isNode(obj) {\n    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? obj instanceof Node : obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    hooks[entryPoint].forEach(function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  // eslint-disable-next-line complexity\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content = void 0;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = currentNode.nodeName.toLowerCase();\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for black-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n        try {\n          var htmlToInsert = currentNode.innerHTML;\n          currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n        } catch (error) {}\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove in case a noscript/noembed XSS is suspected */\n    if (tagName === 'noscript' && currentNode.innerHTML.match(/<\\/noscript/i)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (tagName === 'noembed' && currentNode.innerHTML.match(/<\\/noembed/i)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Convert markup to cover jQuery behavior */\n    if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && /</g.test(currentNode.textContent)) {\n      DOMPurify.removed.push({ element: currentNode.cloneNode() });\n      if (currentNode.innerHTML) {\n        currentNode.innerHTML = currentNode.innerHTML.replace(/</g, '&lt;');\n      } else {\n        currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');\n      }\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = content.replace(MUSTACHE_EXPR$$1, ' ');\n      content = content.replace(ERB_EXPR$$1, ' ');\n      if (currentNode.textContent !== content) {\n        DOMPurify.removed.push({ element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && DATA_ATTR$$1.test(lcName)) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && ARIA_ATTR$$1.test(lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (IS_ALLOWED_URI$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if ((lcName === 'src' || lcName === 'xlink:href') && lcTag !== 'script' && value.indexOf('data:') === 0 && DATA_URI_TAGS[lcTag]) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (ALLOW_UNKNOWN_PROTOCOLS && !IS_SCRIPT_OR_DATA$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr = void 0;\n    var value = void 0;\n    var lcName = void 0;\n    var idAttr = void 0;\n    var l = void 0;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    var attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      var _attr = attr,\n          name = _attr.name,\n          namespaceURI = _attr.namespaceURI;\n\n      value = attr.value.trim();\n      lcName = name.toLowerCase();\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Remove attribute */\n      // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n      // remove a \"name\" attribute from an <img> tag that has an \"id\"\n      // attribute at the time.\n      if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\n        idAttr = attributes.id;\n        attributes = apply(arraySlice, attributes, []);\n        _removeAttribute('id', currentNode);\n        _removeAttribute(name, currentNode);\n        if (attributes.indexOf(idAttr) > l) {\n          currentNode.setAttribute('id', idAttr.value);\n        }\n      } else if (\n      // This works around a bug in Safari, where input[type=file]\n      // cannot be dynamically set after type has been removed\n      currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n        continue;\n      } else {\n        // This avoids a crash in Safari v9.0 with double-ids.\n        // The trick is to first set the id to be empty and then to\n        // remove the attribute\n        if (name === 'id') {\n          currentNode.setAttribute(name, '');\n        }\n\n        _removeAttribute(name, currentNode);\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = value.replace(MUSTACHE_EXPR$$1, ' ');\n        value = value.replace(ERB_EXPR$$1, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      var lcTag = currentNode.nodeName.toLowerCase();\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        DOMPurify.removed.pop();\n      } catch (error) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode = void 0;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body = void 0;\n    var importedNode = void 0;\n    var currentNode = void 0;\n    var oldNode = void 0;\n    var returnNode = void 0;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    if (!dirty) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw new TypeError('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw new TypeError('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!-->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /* AdoptNode() is not used because internal state is not reset\n               (e.g. the past names map of a HTMLFormElement), this is safe\n               in theory but we would rather not risk another attack vector.\n               The state that is cloned by importNode() is explicitly defined\n               by the specs. */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = serializedHTML.replace(MUSTACHE_EXPR$$1, ' ');\n      serializedHTML = serializedHTML.replace(ERB_EXPR$$1, ' ');\n    }\n\n    return trustedTypesPolicy ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    var lcTag = tag.toLowerCase();\n    var lcName = attr.toLowerCase();\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    hooks[entryPoint].push(hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint].pop();\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nreturn purify;\n\n})));\n//# sourceMappingURL=purify.js.map\n"],"sourceRoot":""}