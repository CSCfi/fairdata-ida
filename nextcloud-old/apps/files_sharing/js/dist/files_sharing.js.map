{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/files_sharing/src/files_sharing.js","webpack:///./apps/files_sharing/js/app.js","webpack:///./apps/files_sharing/js/sharedfilelist.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_nonce__","btoa","OC","requestToken","__webpack_public_path__","linkTo","OCA","Sharing","App","_inFileList","_outFileList","_overviewFileList","initSharingIn","$el","this","FileList","id","sharedWithUser","fileActions","_createFileActions","config","Files","getFilesConfig","shown","_extendFileList","appName","find","html","initSharingOut","initSharingLinks","_linkFileList","linksOnly","initSharingDeleted","_deletedFileList","showDeleted","_restoreShareAction","initShareingOverview","isOverview","removeSharingIn","$fileList","empty","removeSharingOut","removeSharingLinks","removeSharingDeleted","removeSharingOverview","destroy","off","_onActionsUpdated","_globalActionsInitialized","FileActions","registerDefaultActions","merge","_","on","register","PERMISSION_READ","filename","context","setActiveView","silent","fileList","changeDirectory","joinPaths","$file","attr","setDefault","registerAction","displayName","altText","mime","permissions","PERMISSION_ALL","iconClass","type","TYPE_INLINE","actionHandler","fileName","shareId","data","$","post","linkToOCS","success","result","remove","fileInfoModel","attributes","fail","Notification","showTemporary","ev","each","list","action","defaultAction","fileSummary","document","ready","e","target","options","initialize","extend","_sharedWithUser","_linksOnly","_showDeleted","_clientSideSort","_allowSelection","_isOverview","apply","arguments","initialized","_renderRow","_createRow","fileData","$tr","before","children","pluck","shares","join","shareOwner","permission","parseInt","PERMISSION_DELETE","expirationTimestamp","expiration","moment","valueOf","formatted","text","modifiedColor","Math","round","Date","getTime","Util","formatDate","relativeModifiedDate","td","class","append","title","style","tooltip","placement","setSharedWithUser","state","updateEmptyContent","getCurrentDirectory","toggleClass","isEmpty","addClass","getDirectoryPermissions","updateStorageStatistics","updateRow","fileInfo","reload","showMask","_reloadCall","abort","_setCurrentDir","promises","deletedShares","url","format","include_tags","beforeSend","xhr","setRequestHeader","shared_with_me","remoteShares","push","ajax","when","callBack","reloadCallback","then","additionalShares","hideMask","files","ocs","concat","_makeFilesFromShares","_makeFilesFromRemoteShares","setFiles","chain","map","share","file","owner","remote","replace","basename","mountpoint","mtime","mimetype","file_id","path","dirname","tags","Share","SHARE_TYPE_REMOTE","filter","share_type","SHARE_TYPE_LINK","file_source","icon","MimeType","getIconUrl","item_type","share_with","stime","displayname_owner","shareOwnerId","uid_owner","file_target","extraData","targetDisplayName","share_with_displayname","targetShareWithId","reduce","memo","recipient","recipientId","recipients","recipientData","shareTypes","recipientsCount","shareWith","shareWithDisplayName","values","mountType","keys","sort","_sortComparator"],"mappings":"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","file":"files_sharing.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","__webpack_nonce__ = btoa(OC.requestToken);\n__webpack_public_path__ = OC.linkTo('files_sharing', 'js/dist/');\n\nimport '../js/app';\nimport '../js/sharedfilelist';\n","/*\n * Copyright (c) 2014 Vincent Petry <pvince81@owncloud.com>\n *\n * This file is licensed under the Affero General Public License version 3\n * or later.\n *\n * See the COPYING-README file.\n *\n */\n\nif (!OCA.Sharing) {\n\t/**\n\t * @namespace OCA.Sharing\n\t */\n\tOCA.Sharing = {};\n}\n/**\n * @namespace\n */\nOCA.Sharing.App = {\n\n\t_inFileList: null,\n\t_outFileList: null,\n\t_overviewFileList: null,\n\n\tinitSharingIn: function($el) {\n\t\tif (this._inFileList) {\n\t\t\treturn this._inFileList;\n\t\t}\n\n\t\tthis._inFileList = new OCA.Sharing.FileList(\n\t\t\t$el,\n\t\t\t{\n\t\t\t\tid: 'shares.self',\n\t\t\t\tsharedWithUser: true,\n\t\t\t\tfileActions: this._createFileActions(),\n\t\t\t\tconfig: OCA.Files.App.getFilesConfig(),\n\t\t\t\t// The file list is created when a \"show\" event is handled, so\n\t\t\t\t// it should be marked as \"shown\" like it would have been done\n\t\t\t\t// if handling the event with the file list already created.\n\t\t\t\tshown: true\n\t\t\t}\n\t\t);\n\n\t\tthis._extendFileList(this._inFileList);\n\t\tthis._inFileList.appName = t('files_sharing', 'Shared with you');\n\t\tthis._inFileList.$el.find('#emptycontent').html('<div class=\"icon-shared\"></div>' +\n\t\t\t'<h2>' + t('files_sharing', 'Nothing shared with you yet') + '</h2>' +\n\t\t\t'<p>' + t('files_sharing', 'Files and folders others share with you will show up here') + '</p>');\n\t\treturn this._inFileList;\n\t},\n\n\tinitSharingOut: function($el) {\n\t\tif (this._outFileList) {\n\t\t\treturn this._outFileList;\n\t\t}\n\t\tthis._outFileList = new OCA.Sharing.FileList(\n\t\t\t$el,\n\t\t\t{\n\t\t\t\tid: 'shares.others',\n\t\t\t\tsharedWithUser: false,\n\t\t\t\tfileActions: this._createFileActions(),\n\t\t\t\tconfig: OCA.Files.App.getFilesConfig(),\n\t\t\t\t// The file list is created when a \"show\" event is handled, so\n\t\t\t\t// it should be marked as \"shown\" like it would have been done\n\t\t\t\t// if handling the event with the file list already created.\n\t\t\t\tshown: true\n\t\t\t}\n\t\t);\n\n\t\tthis._extendFileList(this._outFileList);\n\t\tthis._outFileList.appName = t('files_sharing', 'Shared with others');\n\t\tthis._outFileList.$el.find('#emptycontent').html('<div class=\"icon-shared\"></div>' +\n\t\t\t'<h2>' + t('files_sharing', 'Nothing shared yet') + '</h2>' +\n\t\t\t'<p>' + t('files_sharing', 'Files and folders you share will show up here') + '</p>');\n\t\treturn this._outFileList;\n\t},\n\n\tinitSharingLinks: function($el) {\n\t\tif (this._linkFileList) {\n\t\t\treturn this._linkFileList;\n\t\t}\n\t\tthis._linkFileList = new OCA.Sharing.FileList(\n\t\t\t$el,\n\t\t\t{\n\t\t\t\tid: 'shares.link',\n\t\t\t\tlinksOnly: true,\n\t\t\t\tfileActions: this._createFileActions(),\n\t\t\t\tconfig: OCA.Files.App.getFilesConfig(),\n\t\t\t\t// The file list is created when a \"show\" event is handled, so\n\t\t\t\t// it should be marked as \"shown\" like it would have been done\n\t\t\t\t// if handling the event with the file list already created.\n\t\t\t\tshown: true\n\t\t\t}\n\t\t);\n\n\t\tthis._extendFileList(this._linkFileList);\n\t\tthis._linkFileList.appName = t('files_sharing', 'Shared by link');\n\t\tthis._linkFileList.$el.find('#emptycontent').html('<div class=\"icon-public\"></div>' +\n\t\t\t'<h2>' + t('files_sharing', 'No shared links') + '</h2>' +\n\t\t\t'<p>' + t('files_sharing', 'Files and folders you share by link will show up here') + '</p>');\n\t\treturn this._linkFileList;\n\t},\n\n\tinitSharingDeleted: function($el) {\n\t\tif (this._deletedFileList) {\n\t\t\treturn this._deletedFileList;\n\t\t}\n\t\tthis._deletedFileList = new OCA.Sharing.FileList(\n\t\t\t$el,\n\t\t\t{\n\t\t\t\tid: 'shares.deleted',\n\t\t\t\tshowDeleted: true,\n\t\t\t\tsharedWithUser: true,\n\t\t\t\tfileActions: this._restoreShareAction(),\n\t\t\t\tconfig: OCA.Files.App.getFilesConfig(),\n\t\t\t\t// The file list is created when a \"show\" event is handled, so\n\t\t\t\t// it should be marked as \"shown\" like it would have been done\n\t\t\t\t// if handling the event with the file list already created.\n\t\t\t\tshown: true\n\t\t\t}\n\t\t);\n\n\t\tthis._extendFileList(this._deletedFileList);\n\t\tthis._deletedFileList.appName = t('files_sharing', 'Deleted shares');\n\t\tthis._deletedFileList.$el.find('#emptycontent').html('<div class=\"icon-share\"></div>' +\n\t\t\t'<h2>' + t('files_sharing', 'No deleted shares') + '</h2>' +\n\t\t\t'<p>' + t('files_sharing', 'Shares you deleted will show up here') + '</p>');\n\t\treturn this._deletedFileList;\n\t},\n\n\tinitShareingOverview: function($el) {\n\t\tif (this._overviewFileList) {\n\t\t\treturn this._overviewFileList;\n\t\t}\n\t\tthis._overviewFileList = new OCA.Sharing.FileList(\n\t\t\t$el,\n\t\t\t{\n\t\t\t\tid: 'shares.overview',\n\t\t\t\tconfig: OCA.Files.App.getFilesConfig(),\n\t\t\t\tisOverview: true,\n\t\t\t\t// The file list is created when a \"show\" event is handled, so\n\t\t\t\t// it should be marked as \"shown\" like it would have been done\n\t\t\t\t// if handling the event with the file list already created.\n\t\t\t\tshown: true\n\t\t\t}\n\t\t);\n\n\t\tthis._extendFileList(this._overviewFileList);\n\t\tthis._overviewFileList.appName = t('files_sharing', 'Shares');\n\t\tthis._overviewFileList.$el.find('#emptycontent').html('<div class=\"icon-share\"></div>' +\n\t\t\t'<h2>' + t('files_sharing', 'No shares') + '</h2>' +\n\t\t\t'<p>' + t('files_sharing', 'Shares will show up here') + '</p>');\n\t\treturn this._overviewFileList;\n\t},\n\n\tremoveSharingIn: function() {\n\t\tif (this._inFileList) {\n\t\t\tthis._inFileList.$fileList.empty();\n\t\t}\n\t},\n\n\tremoveSharingOut: function() {\n\t\tif (this._outFileList) {\n\t\t\tthis._outFileList.$fileList.empty();\n\t\t}\n\t},\n\n\tremoveSharingLinks: function() {\n\t\tif (this._linkFileList) {\n\t\t\tthis._linkFileList.$fileList.empty();\n\t\t}\n\t},\n\n\tremoveSharingDeleted: function() {\n\t\tif (this._deletedFileList) {\n\t\t\tthis._deletedFileList.$fileList.empty();\n\t\t}\n\t},\n\n\tremoveSharingOverview: function() {\n\t\tif (this._overviewFileList) {\n\t\t\tthis._overviewFileList.$fileList.empty();\n\t\t}\n\t},\n\n\t/**\n\t * Destroy the app\n\t */\n\tdestroy: function() {\n\t\tOCA.Files.fileActions.off('setDefault.app-sharing', this._onActionsUpdated);\n\t\tOCA.Files.fileActions.off('registerAction.app-sharing', this._onActionsUpdated);\n\t\tthis.removeSharingIn();\n\t\tthis.removeSharingOut();\n\t\tthis.removeSharingLinks();\n\t\tthis._inFileList = null;\n\t\tthis._outFileList = null;\n\t\tthis._linkFileList = null;\n\t\tthis._overviewFileList = null;\n\t\tdelete this._globalActionsInitialized;\n\t},\n\n\t_createFileActions: function() {\n\t\t// inherit file actions from the files app\n\t\tvar fileActions = new OCA.Files.FileActions();\n\t\t// note: not merging the legacy actions because legacy apps are not\n\t\t// compatible with the sharing overview and need to be adapted first\n\t\tfileActions.registerDefaultActions();\n\t\tfileActions.merge(OCA.Files.fileActions);\n\n\t\tif (!this._globalActionsInitialized) {\n\t\t\t// in case actions are registered later\n\t\t\tthis._onActionsUpdated = _.bind(this._onActionsUpdated, this);\n\t\t\tOCA.Files.fileActions.on('setDefault.app-sharing', this._onActionsUpdated);\n\t\t\tOCA.Files.fileActions.on('registerAction.app-sharing', this._onActionsUpdated);\n\t\t\tthis._globalActionsInitialized = true;\n\t\t}\n\n\t\t// when the user clicks on a folder, redirect to the corresponding\n\t\t// folder in the files app instead of opening it directly\n\t\tfileActions.register('dir', 'Open', OC.PERMISSION_READ, '', function (filename, context) {\n\t\t\tOCA.Files.App.setActiveView('files', {silent: true});\n\t\t\tOCA.Files.App.fileList.changeDirectory(OC.joinPaths(context.$file.attr('data-path'), filename), true, true);\n\t\t});\n\t\tfileActions.setDefault('dir', 'Open');\n\t\treturn fileActions;\n\t},\n\n\t_restoreShareAction: function() {\n\t\tvar fileActions = new OCA.Files.FileActions();\n\t\tfileActions.registerAction({\n\t\t\tname: 'Restore',\n\t\t\tdisplayName: '',\n\t\t\taltText: t('files_sharing', 'Restore share'),\n\t\t\tmime: 'all',\n\t\t\tpermissions: OC.PERMISSION_ALL,\n\t\t\ticonClass: 'icon-history',\n\t\t\ttype: OCA.Files.FileActions.TYPE_INLINE,\n\t\t\tactionHandler: function(fileName, context) {\n\t\t\t\tvar shareId = context.$file.data('shareId');\n\t\t\t\t$.post(OC.linkToOCS('apps/files_sharing/api/v1/deletedshares', 2) + shareId)\n\t\t\t\t.success(function(result) {\n\t\t\t\t\tcontext.fileList.remove(context.fileInfoModel.attributes.name);\n\t\t\t\t}).fail(function() {\n\t\t\t\t\tOC.Notification.showTemporary(t('files_sharing', 'Something happened. Unable to restore the share.'));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn fileActions;\n\t},\n\n\t_onActionsUpdated: function(ev) {\n\t\t_.each([this._inFileList, this._outFileList, this._linkFileList], function(list) {\n\t\t\tif (!list) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (ev.action) {\n\t\t\t\tlist.fileActions.registerAction(ev.action);\n\t\t\t} else if (ev.defaultAction) {\n\t\t\t\tlist.fileActions.setDefault(\n\t\t\t\t\tev.defaultAction.mime,\n\t\t\t\t\tev.defaultAction.name\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t},\n\n\t_extendFileList: function(fileList) {\n\t\t// remove size column from summary\n\t\tfileList.fileSummary.$el.find('.filesize').remove();\n\t}\n};\n\n$(document).ready(function() {\n\t$('#app-content-sharingin').on('show', function(e) {\n\t\tOCA.Sharing.App.initSharingIn($(e.target));\n\t});\n\t$('#app-content-sharingin').on('hide', function() {\n\t\tOCA.Sharing.App.removeSharingIn();\n\t});\n\t$('#app-content-sharingout').on('show', function(e) {\n\t\tOCA.Sharing.App.initSharingOut($(e.target));\n\t});\n\t$('#app-content-sharingout').on('hide', function() {\n\t\tOCA.Sharing.App.removeSharingOut();\n\t});\n\t$('#app-content-sharinglinks').on('show', function(e) {\n\t\tOCA.Sharing.App.initSharingLinks($(e.target));\n\t});\n\t$('#app-content-sharinglinks').on('hide', function() {\n\t\tOCA.Sharing.App.removeSharingLinks();\n\t});\n\t$('#app-content-deletedshares').on('show', function(e) {\n\t\tOCA.Sharing.App.initSharingDeleted($(e.target));\n\t});\n\t$('#app-content-deletedshares').on('hide', function() {\n\t\tOCA.Sharing.App.removeSharingDeleted();\n\t});\n\t$('#app-content-shareoverview').on('show', function(e) {\n\t\tOCA.Sharing.App.initShareingOverview($(e.target));\n\t});\n\t$('#app-content-shareoverview').on('hide', function() {\n\t\tOCA.Sharing.App.removeSharingOverview();\n\t});\n});\n","/*\n * Copyright (c) 2014 Vincent Petry <pvince81@owncloud.com>\n *\n * This file is licensed under the Affero General Public License version 3\n * or later.\n *\n * See the COPYING-README file.\n *\n */\n(function() {\n\n\t/**\n\t * @class OCA.Sharing.FileList\n\t * @augments OCA.Files.FileList\n\t *\n\t * @classdesc Sharing file list.\n\t * Contains both \"shared with others\" and \"shared with you\" modes.\n\t *\n\t * @param $el container element with existing markup for the #controls\n\t * and a table\n\t * @param [options] map of options, see other parameters\n\t * @param {boolean} [options.sharedWithUser] true to return files shared with\n\t * the current user, false to return files that the user shared with others.\n\t * Defaults to false.\n\t * @param {boolean} [options.linksOnly] true to return only link shares\n\t */\n\tvar FileList = function($el, options) {\n\t\tthis.initialize($el, options);\n\t};\n\tFileList.prototype = _.extend({}, OCA.Files.FileList.prototype,\n\t\t/** @lends OCA.Sharing.FileList.prototype */ {\n\t\tappName: 'Shares',\n\n\t\t/**\n\t\t * Whether the list shows the files shared with the user (true) or\n\t\t * the files that the user shared with others (false).\n\t\t */\n\t\t_sharedWithUser: false,\n\t\t_linksOnly: false,\n\t\t_showDeleted: false,\n\t\t_clientSideSort: true,\n\t\t_allowSelection: false,\n\t\t_isOverview: false,\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function($el, options) {\n\t\t\tOCA.Files.FileList.prototype.initialize.apply(this, arguments);\n\t\t\tif (this.initialized) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// TODO: consolidate both options\n\t\t\tif (options && options.sharedWithUser) {\n\t\t\t\tthis._sharedWithUser = true;\n\t\t\t}\n\t\t\tif (options && options.linksOnly) {\n\t\t\t\tthis._linksOnly = true;\n\t\t\t}\n\t\t\tif (options && options.showDeleted) {\n\t\t\t\tthis._showDeleted = true;\n\t\t\t}\n\t\t\tif (options && options.isOverview) {\n\t\t\t\tthis._isOverview = true;\n\t\t\t}\n\t\t},\n\n\t\t_renderRow: function() {\n\t\t\t// HACK: needed to call the overridden _renderRow\n\t\t\t// this is because at the time this class is created\n\t\t\t// the overriding hasn't been done yet...\n\t\t\treturn OCA.Files.FileList.prototype._renderRow.apply(this, arguments);\n\t\t},\n\n\t\t_createRow: function(fileData) {\n\t\t\t// TODO: hook earlier and render the whole row here\n\t\t\tvar $tr = OCA.Files.FileList.prototype._createRow.apply(this, arguments);\n\t\t\t$tr.find('.filesize').remove();\n\t\t\t$tr.find('td.date').before($tr.children('td:first'));\n\t\t\t$tr.find('td.filename input:checkbox').remove();\n\t\t\t$tr.attr('data-share-id', _.pluck(fileData.shares, 'id').join(','));\n\t\t\tif (this._sharedWithUser) {\n\t\t\t\t$tr.attr('data-share-owner', fileData.shareOwner);\n\t\t\t\t$tr.attr('data-mounttype', 'shared-root');\n\t\t\t\tvar permission = parseInt($tr.attr('data-permissions')) | OC.PERMISSION_DELETE;\n\t\t\t\t$tr.attr('data-permissions', permission);\n\t\t\t}\n\t\t\tif (this._showDeleted) {\n\t\t\t\tvar permission = fileData.permissions;\n\t\t\t\t$tr.attr('data-share-permissions', permission);\n\t\t\t}\n\n\t\t\t// add row with expiration date for link only shares - influenced by _createRow of filelist\n\t\t\tif (this._linksOnly) {\n\t\t\t\tvar expirationTimestamp = 0;\n\t\t\t\tif(fileData.shares && fileData.shares[0].expiration !== null) {\n\t\t\t\t\texpirationTimestamp = moment(fileData.shares[0].expiration).valueOf();\n\t\t\t\t}\n\t\t\t\t$tr.attr('data-expiration', expirationTimestamp);\n\n\t\t\t\t// date column (1000 milliseconds to seconds, 60 seconds, 60 minutes, 24 hours)\n\t\t\t\t// difference in days multiplied by 5 - brightest shade for expiry dates in more than 32 days (160/5)\n\t\t\t\tvar modifiedColor = Math.round((expirationTimestamp - (new Date()).getTime()) / 1000 / 60 / 60 / 24 * 5);\n\t\t\t\t// ensure that the brightest color is still readable\n\t\t\t\tif (modifiedColor >= 160) {\n\t\t\t\t\tmodifiedColor = 160;\n\t\t\t\t}\n\n\t\t\t\tvar formatted;\n\t\t\t\tvar text;\n\t\t\t\tif (expirationTimestamp > 0) {\n\t\t\t\t\tformatted = OC.Util.formatDate(expirationTimestamp);\n\t\t\t\t\ttext = OC.Util.relativeModifiedDate(expirationTimestamp);\n\t\t\t\t} else {\n\t\t\t\t\tformatted = t('files_sharing', 'No expiration date set');\n\t\t\t\t\ttext = '';\n\t\t\t\t\tmodifiedColor = 160;\n\t\t\t\t}\n\t\t\t\ttd = $('<td></td>').attr({\"class\": \"date\"});\n\t\t\t\ttd.append($('<span></span>').attr({\n\t\t\t\t\t\t\"class\": \"modified\",\n\t\t\t\t\t\t\"title\": formatted,\n\t\t\t\t\t\t\"style\": 'color:rgb(' + modifiedColor + ',' + modifiedColor + ',' + modifiedColor + ')'\n\t\t\t\t\t}).text(text)\n\t\t\t\t\t\t.tooltip({placement: 'top'})\n\t\t\t\t);\n\n\t\t\t\t$tr.append(td);\n\t\t\t}\n\t\t\treturn $tr;\n\t\t},\n\n\t\t/**\n\t\t * Set whether the list should contain outgoing shares\n\t\t * or incoming shares.\n\t\t *\n\t\t * @param state true for incoming shares, false otherwise\n\t\t */\n\t\tsetSharedWithUser: function(state) {\n\t\t\tthis._sharedWithUser = !!state;\n\t\t},\n\n\t\tupdateEmptyContent: function() {\n\t\t\tvar dir = this.getCurrentDirectory();\n\t\t\tif (dir === '/') {\n\t\t\t\t// root has special permissions\n\t\t\t\tthis.$el.find('#emptycontent').toggleClass('hidden', !this.isEmpty);\n\t\t\t\tthis.$el.find('#filestable thead th').toggleClass('hidden', this.isEmpty);\n\n\t\t\t\t// hide expiration date header for non link only shares\n\t\t\t\tif (!this._linksOnly) {\n\t\t\t\t\tthis.$el.find('th.column-expiration').addClass('hidden');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tOCA.Files.FileList.prototype.updateEmptyContent.apply(this, arguments);\n\t\t\t}\n\t\t},\n\n\t\tgetDirectoryPermissions: function() {\n\t\t\treturn OC.PERMISSION_READ | OC.PERMISSION_DELETE;\n\t\t},\n\n\t\tupdateStorageStatistics: function() {\n\t\t\t// no op because it doesn't have\n\t\t\t// storage info like free space / used space\n\t\t},\n\n\t\tupdateRow: function($tr, fileInfo, options) {\n\t\t\t// no-op, suppress re-rendering\n\t\t\treturn $tr;\n\t\t},\n\n\t\treload: function() {\n\t\t\tthis.showMask();\n\t\t\tif (this._reloadCall) {\n\t\t\t\tthis._reloadCall.abort();\n\t\t\t}\n\n\t\t\t// there is only root\n\t\t\tthis._setCurrentDir('/', false);\n\n\t\t\tvar promises = [];\n\n\t\t\tvar deletedShares = {\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1', 2) + 'deletedshares',\n\t\t\t\t/* jshint camelcase: false */\n\t\t\t\tdata: {\n\t\t\t\t\tformat: 'json',\n\t\t\t\t\tinclude_tags: true\n\t\t\t\t},\n\t\t\t\ttype: 'GET',\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\txhr.setRequestHeader('OCS-APIREQUEST', 'true');\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tvar shares = {\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1') + 'shares',\n\t\t\t\t/* jshint camelcase: false */\n\t\t\t\tdata: {\n\t\t\t\t\tformat: 'json',\n\t\t\t\t\tshared_with_me: this._sharedWithUser !== false,\n\t\t\t\t\tinclude_tags: true\n\t\t\t\t},\n\t\t\t\ttype: 'GET',\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\txhr.setRequestHeader('OCS-APIREQUEST', 'true');\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tvar remoteShares = {\n\t\t\t\turl: OC.linkToOCS('apps/files_sharing/api/v1') + 'remote_shares',\n\t\t\t\t/* jshint camelcase: false */\n\t\t\t\tdata: {\n\t\t\t\t\tformat: 'json',\n\t\t\t\t\tinclude_tags: true\n\t\t\t\t},\n\t\t\t\ttype: 'GET',\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\txhr.setRequestHeader('OCS-APIREQUEST', 'true');\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// Add the proper ajax requests to the list and run them\n\t\t\t// and make sure we have 2 promises\n\t\t\tif (this._showDeleted) {\n\t\t\t\tpromises.push($.ajax(deletedShares));\n\t\t\t} else {\n\t\t\t\tpromises.push($.ajax(shares));\n\n\t\t\t\tif (this._sharedWithUser !== false || this._isOverview) {\n\t\t\t\t\tpromises.push($.ajax(remoteShares));\n\t\t\t\t}\n\t\t\t\tif (this._isOverview) {\n\t\t\t\t\tshares.data.shared_with_me = !shares.data.shared_with_me;\n\t\t\t\t\tpromises.push($.ajax(shares));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._reloadCall = $.when.apply($, promises);\n\t\t\tvar callBack = this.reloadCallback.bind(this);\n\t\t\treturn this._reloadCall.then(callBack, callBack);\n\t\t},\n\n\t\treloadCallback: function(shares, remoteShares, additionalShares) {\n\t\t\tdelete this._reloadCall;\n\t\t\tthis.hideMask();\n\n\t\t\tthis.$el.find('#headerSharedWith').text(\n\t\t\t\tt('files_sharing', this._sharedWithUser ? 'Shared by' : 'Shared with')\n\t\t\t);\n\n\t\t\tvar files = [];\n\n\t\t\t// make sure to use the same format\n\t\t\tif (shares[0] && shares[0].ocs) {\n\t\t\t\tshares = shares[0];\n\t\t\t}\n\t\t\tif (remoteShares && remoteShares[0] && remoteShares[0].ocs) {\n\t\t\t\tremoteShares = remoteShares[0];\n\t\t\t}\n\t\t\tif (additionalShares && additionalShares[0] && additionalShares[0].ocs) {\n\t\t\t\tadditionalShares = additionalShares[0];\n\t\t\t}\n\n\t\t\tif (shares.ocs && shares.ocs.data) {\n\t\t\t\tfiles = files.concat(this._makeFilesFromShares(shares.ocs.data, this._sharedWithUser));\n\t\t\t}\n\n\t\t\tif (remoteShares && remoteShares.ocs && remoteShares.ocs.data) {\n\t\t\t\tfiles = files.concat(this._makeFilesFromRemoteShares(remoteShares.ocs.data));\n\t\t\t}\n\n\t\t\tif (additionalShares && additionalShares.ocs && additionalShares.ocs.data) {\n\t\t\t\tfiles = files.concat(this._makeFilesFromShares(additionalShares.ocs.data, !this._sharedWithUser));\n\t\t\t}\n\n\n\t\t\tthis.setFiles(files);\n\t\t\treturn true;\n\t\t},\n\n\t\t_makeFilesFromRemoteShares: function(data) {\n\t\t\tvar files = data;\n\n\t\t\tfiles = _.chain(files)\n\t\t\t\t// convert share data to file data\n\t\t\t\t.map(function(share) {\n\t\t\t\t\tvar file = {\n\t\t\t\t\t\tshareOwner: share.owner + '@' + share.remote.replace(/.*?:\\/\\//g, \"\"),\n\t\t\t\t\t\tname: OC.basename(share.mountpoint),\n\t\t\t\t\t\tmtime: share.mtime * 1000,\n\t\t\t\t\t\tmimetype: share.mimetype,\n\t\t\t\t\t\ttype: share.type,\n\t\t\t\t\t\tid: share.file_id,\n\t\t\t\t\t\tpath: OC.dirname(share.mountpoint),\n\t\t\t\t\t\tpermissions: share.permissions,\n\t\t\t\t\t\ttags: share.tags || []\n\t\t\t\t\t};\n\n\t\t\t\t\tfile.shares = [{\n\t\t\t\t\t\tid: share.id,\n\t\t\t\t\t\ttype: OC.Share.SHARE_TYPE_REMOTE\n\t\t\t\t\t}];\n\t\t\t\t\treturn file;\n\t\t\t\t})\n\t\t\t\t.value();\n\t\t\treturn files;\n\t\t},\n\n\t\t/**\n\t\t * Converts the OCS API share response data to a file info\n\t\t * list\n\t\t * @param {Array} data OCS API share array\n\t\t * @param {bool} sharedWithUser\n\t\t * @return {Array.<OCA.Sharing.SharedFileInfo>} array of shared file info\n\t\t */\n\t\t_makeFilesFromShares: function(data, sharedWithUser) {\n\t\t\t/* jshint camelcase: false */\n\t\t\tvar files = data;\n\n\t\t\tif (this._linksOnly) {\n\t\t\t\tfiles = _.filter(data, function(share) {\n\t\t\t\t\treturn share.share_type === OC.Share.SHARE_TYPE_LINK;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// OCS API uses non-camelcased names\n\t\t\tfiles = _.chain(files)\n\t\t\t\t// convert share data to file data\n\t\t\t\t.map(function(share) {\n\t\t\t\t\t// TODO: use OC.Files.FileInfo\n\t\t\t\t\tvar file = {\n\t\t\t\t\t\tid: share.file_source,\n\t\t\t\t\t\ticon: OC.MimeType.getIconUrl(share.mimetype),\n\t\t\t\t\t\tmimetype: share.mimetype,\n\t\t\t\t\t\ttags: share.tags || []\n\t\t\t\t\t};\n\t\t\t\t\tif (share.item_type === 'folder') {\n\t\t\t\t\t\tfile.type = 'dir';\n\t\t\t\t\t\tfile.mimetype = 'httpd/unix-directory';\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfile.type = 'file';\n\t\t\t\t\t}\n\t\t\t\t\tfile.share = {\n\t\t\t\t\t\tid: share.id,\n\t\t\t\t\t\ttype: share.share_type,\n\t\t\t\t\t\ttarget: share.share_with,\n\t\t\t\t\t\tstime: share.stime * 1000,\n\t\t\t\t\t\texpiration: share.expiration,\n\t\t\t\t\t};\n\t\t\t\t\tif (sharedWithUser) {\n\t\t\t\t\t\tfile.shareOwner = share.displayname_owner;\n\t\t\t\t\t\tfile.shareOwnerId = share.uid_owner;\n\t\t\t\t\t\tfile.name = OC.basename(share.file_target);\n\t\t\t\t\t\tfile.path = OC.dirname(share.file_target);\n\t\t\t\t\t\tfile.permissions = share.permissions;\n\t\t\t\t\t\tif (file.path) {\n\t\t\t\t\t\t\tfile.extraData = share.file_target;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (share.share_type !== OC.Share.SHARE_TYPE_LINK) {\n\t\t\t\t\t\t\tfile.share.targetDisplayName = share.share_with_displayname;\n\t\t\t\t\t\t\tfile.share.targetShareWithId = share.share_with;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfile.name = OC.basename(share.path);\n\t\t\t\t\t\tfile.path = OC.dirname(share.path);\n\t\t\t\t\t\tfile.permissions = OC.PERMISSION_ALL;\n\t\t\t\t\t\tif (file.path) {\n\t\t\t\t\t\t\tfile.extraData = share.path;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn file;\n\t\t\t\t})\n\t\t\t\t// Group all files and have a \"shares\" array with\n\t\t\t\t// the share info for each file.\n\t\t\t\t//\n\t\t\t\t// This uses a hash memo to cumulate share information\n\t\t\t\t// inside the same file object (by file id).\n\t\t\t\t.reduce(function(memo, file) {\n\t\t\t\t\tvar data = memo[file.id];\n\t\t\t\t\tvar recipient = file.share.targetDisplayName;\n\t\t\t\t\tvar recipientId = file.share.targetShareWithId;\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\tdata = memo[file.id] = file;\n\t\t\t\t\t\tdata.shares = [file.share];\n\t\t\t\t\t\t// using a hash to make them unique,\n\t\t\t\t\t\t// this is only a list to be displayed\n\t\t\t\t\t\tdata.recipients = {};\n\t\t\t\t\t\tdata.recipientData = {};\n\t\t\t\t\t\t// share types\n\t\t\t\t\t\tdata.shareTypes = {};\n\t\t\t\t\t\t// counter is cheaper than calling _.keys().length\n\t\t\t\t\t\tdata.recipientsCount = 0;\n\t\t\t\t\t\tdata.mtime = file.share.stime;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// always take the most recent stime\n\t\t\t\t\t\tif (file.share.stime > data.mtime) {\n\t\t\t\t\t\t\tdata.mtime = file.share.stime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.shares.push(file.share);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (recipient) {\n\t\t\t\t\t\t// limit counterparts for output\n\t\t\t\t\t\tif (data.recipientsCount < 4) {\n\t\t\t\t\t\t\t// only store the first ones, they will be the only ones\n\t\t\t\t\t\t\t// displayed\n\t\t\t\t\t\t\tdata.recipients[recipient] = true;\n\t\t\t\t\t\t\tdata.recipientData[data.recipientsCount] = {\n\t\t\t\t\t\t\t\t'shareWith': recipientId,\n\t\t\t\t\t\t\t\t'shareWithDisplayName': recipient\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.recipientsCount++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdata.shareTypes[file.share.type] = true;\n\n\t\t\t\t\tdelete file.share;\n\t\t\t\t\treturn memo;\n\t\t\t\t}, {})\n\t\t\t\t// Retrieve only the values of the returned hash\n\t\t\t\t.values()\n\t\t\t\t// Clean up\n\t\t\t\t.each(function(data) {\n\t\t\t\t\t// convert the recipients map to a flat\n\t\t\t\t\t// array of sorted names\n\t\t\t\t\tdata.mountType = 'shared';\n\t\t\t\t\tdelete data.recipientsCount;\n\t\t\t\t\tif (sharedWithUser) {\n\t\t\t\t\t\t// only for outgoing shares\n\t\t\t\t\t\tdelete data.shareTypes;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.shareTypes = _.keys(data.shareTypes);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// Finish the chain by getting the result\n\t\t\t\t.value();\n\n\t\t\t// Sort by expected sort comparator\n\t\t\treturn files.sort(this._sortComparator);\n\t\t},\n\t});\n\n\t/**\n\t * Share info attributes.\n\t *\n\t * @typedef {Object} OCA.Sharing.ShareInfo\n\t *\n\t * @property {int} id share ID\n\t * @property {int} type share type\n\t * @property {String} target share target, either user name or group name\n\t * @property {int} stime share timestamp in milliseconds\n\t * @property {String} [targetDisplayName] display name of the recipient\n\t * (only when shared with others)\n\t * @property {String} [targetShareWithId] id of the recipient\n\t *\n\t */\n\n\t/**\n\t * Recipient attributes\n\t *\n\t * @typedef {Object} OCA.Sharing.RecipientInfo\n\t * @property {String} shareWith the id of the recipient\n\t * @property {String} shareWithDisplayName the display name of the recipient\n\t */\n\n\t/**\n\t * Shared file info attributes.\n\t *\n\t * @typedef {OCA.Files.FileInfo} OCA.Sharing.SharedFileInfo\n\t *\n\t * @property {Array.<OCA.Sharing.ShareInfo>} shares array of shares for\n\t * this file\n\t * @property {int} mtime most recent share time (if multiple shares)\n\t * @property {String} shareOwner name of the share owner\n\t * @property {Array.<String>} recipients name of the first 4 recipients\n\t * (this is mostly for display purposes)\n\t * @property {Object.<OCA.Sharing.RecipientInfo>} recipientData (as object for easier\n\t * passing to HTML data attributes with jQuery)\n\t */\n\n\tOCA.Sharing.FileList = FileList;\n})();\n"],"sourceRoot":""}