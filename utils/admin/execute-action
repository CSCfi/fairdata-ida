#!/bin/bash
#--------------------------------------------------------------------------------
# This file is part of the IDA research data storage service
#
# Copyright (C) 2019 Ministry of Education and Culture, Finland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
# License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# @author CSC - IT Center for Science Ltd., Espoo Finland <servicedesk@csc.fi>
# @license GNU Affero General Public License, version 3
# @link https://research.csc.fi/
#--------------------------------------------------------------------------------

SCRIPT=`basename "$(realpath $0)"`

USAGE="
Usage: $SCRIPT project user password action pathname
       $SCRIPT -h

       project  = the project name
       user     = the user account username
       password = the user account password
       action   = one of 'freeze', 'unfreeze', or 'delete'
       pathname = a relative pathmame within the staging or frozen area

       Pathnames may correspond to either files or folders. If a folder is specified, then the action is
       performed for all files within that folder and all subfolders. Actions can be performed on only one
       file or folder at a time.
"

#--------------------------------------------------------------------------------
# Initialize script with common definitions

INIT_FILE=`dirname $0`/lib/init_admin_script.sh

if [ -e $INIT_FILE ]
then
    . $INIT_FILE
else
    echo "The initialization file $INIT_FILE cannot be found. Aborting." >&2
    exit 1
fi

#--------------------------------------------------------------------------------
# Process command line arguments

if [ "$#" -ne 5 ]; then
    echo "$USAGE" >&2
    errorExit "Invalid number of arguments"
fi

USERNAME="$2"
PASSWORD="$3"
ACTION="$4"
PATHNAME="$5"

USER_CREDENTIALS="${USERNAME}:${PASSWORD}"

case $ACTION in
    "freeze")
        ;;
    "unfreeze")
        ;;
    "delete")
        ;;
    *)
        errorExit "Invalid action: ${ACTION}"
        ;;
esac

#--------------------------------------------------------------------------------

ENCODED_PATHNAME=$(urlEncode "${PATHNAME}")

REQUEST_URL="https://localhost/apps/ida/api/${ACTION}?project=${PROJECT}&pathname=${ENCODED_PATHNAME}"

echo "Executing ${ACTION} action for pathname ${PATHNAME} in project ${PROJECT}..."

# NOTE: The X-SIMULATE-AGENTS header is only used by automated testing, to skip
# postprocessing for test cases that do not need them, so that the tests run most
# efficiently.

if [ "$DEBUG" = "true" ]; then
    if [ "$SIMULATE_AGENTS" = "true" ]; then
        echo "$CURL_POST $USER_CREDENTIALS -H 'X-SIMULATE-AGENTS: true' \"${REQUEST_URL}\"" >&2
    else
        echo "$CURL_POST $USER_CREDENTIALS \"${REQUEST_URL}\"" >&2
    fi
fi

if [ "$SIMULATE_AGENTS" = "true" ]; then
    OUT=`$CURL_POST $USER_CREDENTIALS -H 'X-SIMULATE-AGENTS: true' "${REQUEST_URL}" 2>$ERR`
else
    OUT=`$CURL_POST $USER_CREDENTIALS "${REQUEST_URL}" 2>$ERR`
fi

if [ -s $ERR ]; then
    MSG=`cat $ERR`
    echoAndLog "$MSG"
    errorExit "Action $ACTION failed for pathname $PATHNAME in project $PROJECT"
fi

PID=`echo $OUT | grep '"pid":'`

if [ "$PID" = "" ]; then
    echoAndLog "$OUT"
    errorExit "$ACTION action failed for pathname $PATHNAME in project $PROJECT"
fi

rm $ERR 2>/dev/null

echoAndLog "Initiated $ACTION action successfully for pathname $PATHNAME in project $PROJECT. Postprocessing ongoing..."

addToLog "DONE"
