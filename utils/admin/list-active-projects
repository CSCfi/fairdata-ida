#!/bin/bash
# --------------------------------------------------------------------------------
# This file is part of the IDA research data storage service
#
# Copyright (C) 2020 Ministry of Education and Culture, Finland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
# License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# @author   CSC - IT Center for Science Ltd., Espoo Finland <servicedesk@csc.fi>
# @license  GNU Affero General Public License, version 3
# @link     https://research.csc.fi/
# --------------------------------------------------------------------------------
#
# This script scans key database tables to determine which projects have had
# any activity during the specified period or since the specified date(time),
# if given, or during the past 24 hours if nothing specified. If only a date
# is specified, the time T00:00:00Z is used.
#
# --------------------------------------------------------------------------------

SCRIPT=`basename "$(realpath $0)"`

USAGE="
Usage: $SCRIPT [ ( date[time] | week | month | year ) ] 
       $SCRIPT -h

       date[time]   an ISO date or datetime string /YYYY-MM-DD(Thh:mm:ssZ])?/ (defaults to 24 hours ago)
       week         calculate a timestamp one week in the past
       month        calculate a timestamp one month in the past
       year         calculate a timestamp one year in the past
"

PROJECT="null"

# --------------------------------------------------------------------------------
# Initialize script with common definitions

INIT_FILE=`dirname "$(realpath $0)"`/lib/init_audit_script.sh

if [ -e $INIT_FILE ]
then
    . $INIT_FILE
else
    echo "The initialization file $INIT_FILE cannot be found. Aborting." >&2
    exit 1
fi

#--------------------------------------------------------------------------------

TZ=UTC

SINCE=""

if [ "$1" ]; then
    if [[ "$1" =~ ^(week|month|year)$ ]]; then
        SINCE=`date -d "$START - 1 $1" +"%Y-%m-%dT%H:%M:%SZ"`
    elif [[ "$1" =~ ^[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}T[[:digit:]]{2}:[[:digit:]]{2}:[[:digit:]]{2}Z$ ]]; then
        SINCE="$1"
    elif [[ "$1" =~ ^[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}$ ]]; then
        SINCE="$1""T00:00:00Z"
    else
        echo "Invalid date[time]: $1"
        exit 1
    fi
fi

# If date(time) not specified, calculate datetime for 24 hours ago.
if [ "$SINCE" = "" ]; then
    SINCE=`date -d "$START - 24 hours" +"%Y-%m-%dT%H:%M:%SZ"`
fi

if [ "$DEBUG" = "true" ]; then
    echo "SINCE: $SINCE"
    echo "START: $START"
fi

if [[ "$SINCE" > "$START" ]]; then
    errorExit "Specified timestamp $SINCE is in the future"
fi

PROJECTS=`DEBUG=false $ROOT/utils/admin/list-projects`

if [ $? -ne 0 ]; then
    errorExit "Failed to retrieve listing of projects"
fi

for PROJECT in $PROJECTS; do

    if [ "$DEBUG" = "true" ]; then
        echo "$CURL_GET $ADMIN_CREDENTIALS -H \"$IDA_MODE_HEADER\" \"${IDA_API}/dataChanges/${PROJECT}/last\" | jq -r '.timestamp'"
    fi

    LAST_CHANGE=`$CURL_GET $ADMIN_CREDENTIALS -H "$IDA_MODE_HEADER" "${IDA_API}/dataChanges/${PROJECT}/last" | jq -r '.timestamp'`

    if [ $? -ne 0 ]; then
        errorExit "Failed to retrieve last data change for project $PROJECT"
    fi

    if [ "$DEBUG" = "true" ]; then
        echo "LAST_CHANGE: $LAST_CHANGE"
    fi

    if [[ "$LAST_CHANGE" > "$SINCE" ]]; then
        echo "${PROJECT}"
    fi

done

addToLog "DONE"
