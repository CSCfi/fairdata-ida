#!/bin/bash
# --------------------------------------------------------------------------------
# This file is part of the IDA research data storage service
#
# Copyright (C) 2020 Ministry of Education and Culture, Finland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
# License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# @author   CSC - IT Center for Science Ltd., Espoo Finland <servicedesk@csc.fi>
# @license  GNU Affero General Public License, version 3
# @link     https://research.csc.fi/
# --------------------------------------------------------------------------------
#
# This script audits all projects in the IDA service which have had any activity
# during the specified period or since the specified date(time), if given, or
# during the past 24 hours if nothing is specified. If only a date is specified,
# the time T00:00:00Z is used. Auditing is also limited to nodes which have been
# created or modified since the beginning of the script execution time.
#
# --------------------------------------------------------------------------------

SCRIPT=`basename "$(realpath $0)"`

USAGE="
Usage: $SCRIPT [ ( timestamp | week | month | year ) ] [ ( --report | --report-errors ) [ email ] ] [ --ignore-timestamps ]
       $SCRIPT -h

       timestamp    an ISO date or datetime string /YYYY-MM-DD(Thh:mm:ssZ])?/ (defaults to 24 hours ago)
       week         calculate a timestamp one week in the past
       month        calculate a timestamp one month in the past
       year         calculate a timestamp one year in the past
       email        the email address where audit reports should be sent (defaults to dev team)

If --report is specified, the auditing results will be emailed, even if successful.

If --report-errors is specified, the auditing results will be emailed, but only if errors are detected.

Emails will be sent to the default distribution list unless an alternative email address is specified.

If --ignore-timestamps is specified, no comparison will be made between disk timestamps and database values.
"

PROJECT="null"

case "$1" in
    "--report" | "--report-errors" | "--ignore-timestamps")
        SINCE=""
        AUDIT_ARGS="$1 $2 $3"
        ;;
    *)
        SINCE="$1"
        AUDIT_ARGS="$2 $3 $4"
        ;;
esac

# --------------------------------------------------------------------------------
# Initialize script with common definitions

INIT_FILE=`dirname "$(realpath $0)"`/lib/init_audit_script.sh

if [ -e $INIT_FILE ]
then
    . $INIT_FILE
else
    echo "The initialization file $INIT_FILE cannot be found. Aborting." >&2
    exit 1
fi

#DEBUG="true" # TEMP HACK

if [ "$DEBUG" = "true" ]; then
    echo "SINCE:      $SINCE" >&2
    echo "AUDIT_ARGS: $AUDIT_ARGS" >&2
fi

#--------------------------------------------------------------------------------

PROJECTS=`$ROOT/utils/admin/list-active-projects $SINCE`

for PROJECT in $PROJECTS; do
    $ROOT/utils/admin/audit-project $PROJECT $AUDIT_ARGS
done

addToLog "DONE"
