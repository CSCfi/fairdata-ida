#!/bin/bash
#--------------------------------------------------------------------------------
# This file is part of the IDA research data storage service
#
# Copyright (C) 2021 Ministry of Education and Culture, Finland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
# License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# @author   CSC - IT Center for Science Ltd., Espoo Finland <servicedesk@csc.fi>
# @license  GNU Affero General Public License, version 3
# @link     https://research.csc.fi/
#--------------------------------------------------------------------------------
#
# This script optimizes the development emulation of the glusterfs volumes, as
# generated by initialize_dev_glusterfs, with the same settings / configurations
# as are used in production.
#
# This script must be run as root.
#
# NOTE: these optimizations break the emulated glusterfs storage, even though they
# are utilized in production. Need to determine which are causing the issues, why,
# and include as many as possible to have the emulated glusterfs storage as close
# to production as possible. For now, this script exits without doing anything.
#
#--------------------------------------------------------------------------------

exit 1 # TEMP - for some reason this breaks the emulated glusterfs, needs investigation...

PARENT_FOLDER=`dirname "$(realpath $0)"`
PARENT_BASENAME=`basename "$PARENT_FOLDER"`

while [ "$PARENT_BASENAME" != "ida" -a "$PARENT_BASENAME" != "" ]; do
    PARENT_FOLDER=`dirname "$PARENT_FOLDER"`
    PARENT_BASENAME=`basename "$PARENT_FOLDER"`
done

CONFIG_FILE="$PARENT_FOLDER/config/config.sh"

if [ -e $CONFIG_FILE ]
then
    . $CONFIG_FILE
else
    echo "The configuration file $CONFIG_FILE cannot be found. Aborting." >&2
    exit 1
fi

if [ "$ROOT" = "" ]; then
    echo "The configuration variable $ROOT has not been defined Aborting." >&2
    exit 1
fi

#--------------------------------------------------------------------------------
# Verify that we are in a non-production environment

if [ "$IDA_ENVIRONMENT" = "" ]; then
    echo "The configuration variable $IDA_ENVIRONMENT has not been defined Aborting." >&2
    exit 1
fi

if [ "$IDA_ENVIRONMENT" = "PRODUCTION" ]; then
    echo "Error: This script can not be run in a production environment. Aborting." >&2
    exit 1
fi

#--------------------------------------------------------------------------------
# Ensure script is run as root

ID=`id -u -n`
if [ "$ID" != "root" ]; then
    echo "Error: You must execute this script as root" >&2
    exit 1
fi

echo "Optimizing glusterfs volumes..."

for VOLUME in {1..4}; do
    gluster volume set storage_vol0$VOLUME cluster.readdir-optimize off
    gluster volume set storage_vol0$VOLUME performance.parallel-readdir on
    gluster volume set storage_vol0$VOLUME features.cache-invalidation on
    gluster volume set storage_vol0$VOLUME diagnostics.count-fop-hits on
    gluster volume set storage_vol0$VOLUME diagnostics.latency-measurement on
    gluster volume set storage_vol0$VOLUME client.event-threads 6
    gluster volume set storage_vol0$VOLUME server.event-threads 6
    gluster volume set storage_vol0$VOLUME server.outstanding-rpc-limit 512
    gluster volume set storage_vol0$VOLUME performance.client-io-threads on
    gluster volume set storage_vol0$VOLUME transport.address-family inet
    gluster volume set storage_vol0$VOLUME nfs.disable on
    gluster volume set storage_vol0$VOLUME user.cifs disable
done

