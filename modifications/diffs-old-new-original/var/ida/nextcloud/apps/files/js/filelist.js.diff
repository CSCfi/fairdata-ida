--- /var/ida/nextcloud-new/apps/files/js/filelist.js	2021-10-27 15:54:06.723752014 +0000
+++ /var/ida/nextcloud-old/apps/files/js/filelist.js.original	2021-10-27 10:25:30.397495090 +0000
@@ -58,12 +58,6 @@
 		 */
 		$fileList: null,
 
-		$header: null,
-		headers: [],
-
-		$footer: null,
-		footers: [],
-
 		/**
 		 * @type OCA.Files.BreadCrumb
 		 */
@@ -131,14 +125,6 @@
 		dirInfo: null,
 
 		/**
-		 * Whether to prevent or to execute the default file actions when the
-		 * file name is clicked.
-		 *
-		 * @type boolean
-		 */
-		_defaultFileActionsDisabled: false,
-
-		/**
 		 * File actions handler, defaults to OCA.Files.FileActions
 		 * @type OCA.Files.FileActions
 		 */
@@ -252,8 +238,7 @@
 				this._filesConfig = OCA.Files.App.getFilesConfig();
 			} else {
 				this._filesConfig = new OC.Backbone.Model({
-					'showhidden': false,
-					'cropimagepreviews': true
+					'showhidden': false
 				});
 			}
 
@@ -277,8 +262,6 @@
 			this.$container = options.scrollContainer || $(window);
 			this.$table = $el.find('table:first');
 			this.$fileList = $el.find('#fileList');
-			this.$header = $el.find('#filelist-header');
-			this.$footer = $el.find('#filelist-footer');
 
 			if (!_.isUndefined(this._filesConfig)) {
 				this._filesConfig.on('change:showhidden', function() {
@@ -292,10 +275,6 @@
 					}
 				});
 
-				this._filesConfig.on('change:cropimagepreviews', function() {
-					self.reload();
-				});
-
 				this.$el.toggleClass('hide-hidden-files', !this._filesConfig.get('showhidden'));
 			}
 
@@ -305,10 +284,6 @@
 				this._detailsView.$el.addClass('disappear');
 			}
 
-			if (options && options.defaultFileActionsDisabled) {
-				this._defaultFileActionsDisabled = options.defaultFileActionsDisabled
-			}
-
 			this._initFileActions(options.fileActions);
 
 			if (this._detailsView) {
@@ -381,12 +356,7 @@
 
 			this.$el.on('show', this._onResize);
 
-			// reload files list on share accept
-			$('body').on('OCA.Notification.Action', function(eventObject) {
-				if (eventObject.notification.app === 'files_sharing' && eventObject.action.type === 'POST') {
-					self.reload()
-				}
-			});
+			this.updateSearch();
 
 			this.$fileList.on('click','td.filename>a.name, td.filesize, td.date', _.bind(this._onClickFile, this));
 
@@ -435,51 +405,9 @@
 					this.setupUploadEvents(this._uploader);
 				}
 			}
-			this.triedActionOnce = false;
-
-			OC.Plugins.attach('OCA.Files.FileList', this);
-
-			OCA.Files.App && OCA.Files.App.updateCurrentFileList(this);
 
-			this.initHeadersAndFooters()
-		},
-
-		initHeadersAndFooters: function() {
-			this.headers.sort(function(a, b) {
-				return a.order - b.order;
-			})
-			this.footers.sort(function(a, b) {
-				return a.order - b.order;
-			})
-			var uniqueIds = [];
-			var self = this;
-			this.headers.forEach(function(header) {
-				if (header.id) {
-					if (uniqueIds.indexOf(header.id) !== -1) {
-						return
-					}
-					uniqueIds.push(header.id)
-				}
-				self.$header.append(header.el)
-
-				setTimeout(function() {
-					header.render(self)
-				}, 0)
-			})
 
-			uniqueIds = [];
-			this.footers.forEach(function(footer) {
-				if (footer.id) {
-					if (uniqueIds.indexOf(footer.id) !== -1) {
-						return
-					}
-					uniqueIds.push(footer.id)
-				}
-				self.$footer.append(footer.el)
-				setTimeout(function() {
-					footer.render(self)
-				}, 0)
-			})
+			OC.Plugins.attach('OCA.Files.FileList', this);
 		},
 
 		/**
@@ -634,11 +562,11 @@
 		 * @param {string} [tabId] optional tab id to select
 		 */
 		showDetailsView: function(fileName, tabId) {
-			console.warn('showDetailsView is deprecated! Use OCA.Files.Sidebar.activeTab. It will be removed in nextcloud 20.');
 			this._updateDetailsView(fileName);
 			if (tabId) {
-				OCA.Files.Sidebar.setActiveTab(tabId);
+				this._detailsView.selectTab(tabId);
 			}
+			OC.Apps.showAppSidebar(this._detailsView.$el);
 		},
 
 		/**
@@ -648,37 +576,47 @@
 		 * @param {boolean} [show=true] whether to open the sidebar if it was closed
 		 */
 		_updateDetailsView: function(fileName, show) {
-			if (!(OCA.Files && OCA.Files.Sidebar)) {
-				console.error('No sidebar available');
+			if (!this._detailsView) {
 				return;
 			}
 
-			if (!fileName && OCA.Files.Sidebar.close) {
-				OCA.Files.Sidebar.close()
-				return
-			} else if (typeof fileName !== 'string') {
-				fileName = ''
+			// show defaults to true
+			show = _.isUndefined(show) || !!show;
+			var oldFileInfo = this._detailsView.getFileInfo();
+			if (oldFileInfo) {
+				// TODO: use more efficient way, maybe track the highlight
+				this.$fileList.children().filterAttr('data-id', '' + oldFileInfo.get('id')).removeClass('highlighted');
+				oldFileInfo.off('change', this._onSelectedModelChanged, this);
 			}
 
-			// this is the old (terrible) way of getting the context.
-			// don't use it anywhere else. Just provide the full path
-			// of the file to the sidebar service
-			var tr = this.findFileEl(fileName)
-			var model = this.getModelForFile(tr)
-			var path = model.attributes.path + '/' + model.attributes.name
-
-			// make sure the file list has the correct context available
+			if (!fileName) {
+				this._detailsView.setFileInfo(null);
 			if (this._currentFileModel) {
 				this._currentFileModel.off();
 			}
-			this.$fileList.children().removeClass('highlighted');
-			tr.addClass('highlighted');
-			this._currentFileModel = model;
+				this._currentFileModel = null;
+				OC.Apps.hideAppSidebar(this._detailsView.$el);
+				return;
+			}
+
+			if (show && this._detailsView.$el.hasClass('disappear')) {
+				OC.Apps.showAppSidebar(this._detailsView.$el);
+			}
 
-			// open sidebar and set file
-			if (typeof show === 'undefined' || !!show || (OCA.Files.Sidebar.file !== '')) {
-				OCA.Files.Sidebar.open(path.replace('//', '/'))
+			if (fileName instanceof OCA.Files.FileInfoModel) {
+				var model = fileName;
+			} else {
+				var $tr = this.findFileEl(fileName);
+				var model = this.getModelForFile($tr);
+				$tr.addClass('highlighted');
 			}
+
+			this._currentFileModel = model;
+
+			this._replaceDetailsViewElementIfNeeded();
+
+			this._detailsView.setFileInfo(model);
+			this._detailsView.$el.scrollTop(0);
 		},
 
 		/**
@@ -714,6 +652,8 @@
 			});
 
 			this.breadcrumb._resize();
+
+			this.$table.find('>thead').width($('#app-content').width() - OC.Util.getScrollBarWidth());
 		},
 
 		/**
@@ -734,18 +674,12 @@
 				.addClass(show ? 'icon-toggle-filelist' : 'icon-toggle-pictures')
 
 			$('.list-container').toggleClass('view-grid', show);
-			if (show) {
-				// If switching into grid view from list view, too few files might be displayed
-				// Try rendering the next page
-				this._onScroll();
-			}
 		},
 
 		/**
 		 * Event handler when leaving previously hidden state
 		 */
 		_onShow: function(e) {
-			OCA.Files.App && OCA.Files.App.updateCurrentFileList(this);
 			if (this.shown) {
 				if (e.itemId === this.id) {
 					this._setCurrentDir('/', false);
@@ -880,24 +814,31 @@
 			if ($tr.hasClass('dragging')) {
 				return;
 			}
-			if (this._allowSelection && event.shiftKey) {
+			if (this._allowSelection && (event.ctrlKey || event.shiftKey)) {
 				event.preventDefault();
+				if (event.shiftKey) {
 				this._selectRange($tr);
+				} else {
+					this._selectSingle($tr);
+				}
 				this._lastChecked = $tr;
 				this.updateSelectionSummary();
-			} else if (!event.ctrlKey) {
+			} else {
 				// clicked directly on the name
-				if (!this._detailsView || $(event.target).is('.nametext, .name, .thumbnail') || $(event.target).closest('.nametext').length) {
+				if (!this._detailsView || $(event.target).is('.nametext, .name') || $(event.target).closest('.nametext').length) {
 					var filename = $tr.attr('data-file');
 					var renaming = $tr.data('renaming');
-					if (this._defaultFileActionsDisabled) {
-						event.preventDefault();
-					} else if (!renaming) {
+					if (!renaming) {
 						this.fileActions.currentFile = $tr.find('td');
-						var spec = this.fileActions.getCurrentDefaultFileAction();
-						if (spec && spec.action) {
+						var mime = this.fileActions.getCurrentMimeType();
+						var type = this.fileActions.getCurrentType();
+						var permissions = this.fileActions.getCurrentPermissions();
+						var action = this.fileActions.getDefault(mime,type, permissions);
+						if (action) {
 							event.preventDefault();
-							spec.action(filename, {
+							// also set on global object for legacy apps
+							window.FileActions.currentFile = this.fileActions.currentFile;
+							action(filename, {
 								$file: $tr,
 								fileList: this,
 								fileActions: this.fileActions,
@@ -921,6 +862,8 @@
 					var permissions = this.fileActions.getCurrentPermissions();
 					var action = this.fileActions.get(mime, type, permissions)['Details'];
 					if (action) {
+						// also set on global object for legacy apps
+						window.FileActions.currentFile = this.fileActions.currentFile;
 						action(filename, {
 							$file: $tr,
 							fileList: this,
@@ -1132,6 +1075,7 @@
 			if ($targetDir !== undefined && e.which === 1) {
 				e.preventDefault();
 				this.changeDirectory($targetDir, true, true);
+				this.updateSearch();
 			}
 		},
 
@@ -1199,7 +1143,7 @@
 			}
 			title += this.appName;
 			// Sets the page title with the " - Nextcloud" suffix as in templates
-			window.document.title = title + ' - ' + OC.theme.title;
+			window.document.title = title + ' - ' + oc_defaults.title;
 
 			return true;
 		},
@@ -1241,7 +1185,6 @@
 				mtime: parseInt($el.attr('data-mtime'), 10),
 				type: $el.attr('data-type'),
 				etag: $el.attr('data-etag'),
-				quotaAvailableBytes: $el.attr('data-quota'),
 				permissions: parseInt($el.attr('data-permissions'), 10),
 				hasPreview: $el.attr('data-has-preview') === 'true',
 				isEncrypted: $el.attr('data-e2eencrypted') === 'true'
@@ -1322,31 +1265,6 @@
 				}, 0);
 			}
 
-			if(!this.triedActionOnce) {
-				var id = OC.Util.History.parseUrlQuery().openfile;
-				if (id) {
-					var $tr = this.$fileList.children().filterAttr('data-id', '' + id);
-					var filename = $tr.attr('data-file');
-					this.fileActions.currentFile = $tr.find('td');
-					var dir = $tr.attr('data-path') || this.getCurrentDirectory();
-					var spec = this.fileActions.getCurrentDefaultFileAction();
-					if (spec && spec.action) {
-						spec.action(filename, {
-							$file: $tr,
-							fileList: this,
-							fileActions: this.fileActions,
-							dir: dir
-						});
-
-					}
-					else {
-						var url = this.getDownloadUrl(filename, dir, true);
-						OCA.Files.Files.handleDownload(url);
-					}
-				}
-				this.triedActionOnce = true;
-			}
-
 			return newTrs;
 		},
 
@@ -1439,13 +1357,6 @@
 					return OC.MimeType.getIconUrl('dir-external');
 				} else if (fileInfo.mountType !== undefined && fileInfo.mountType !== '') {
 					return OC.MimeType.getIconUrl('dir-' + fileInfo.mountType);
-				} else if (fileInfo.shareTypes && (
-					fileInfo.shareTypes.indexOf(OC.Share.SHARE_TYPE_LINK) > -1
-					|| fileInfo.shareTypes.indexOf(OC.Share.SHARE_TYPE_EMAIL) > -1)
-				) {
-					return OC.MimeType.getIconUrl('dir-public')
-				} else if (fileInfo.shareTypes && fileInfo.shareTypes.length > 0) {
-					return OC.MimeType.getIconUrl('dir-shared')
 				}
 				return OC.MimeType.getIconUrl('dir');
 			}
@@ -1501,7 +1412,6 @@
 				"data-mime": mime,
 				"data-mtime": mtime,
 				"data-etag": fileData.etag,
-				"data-quota": fileData.quotaAvailableBytes,
 				"data-permissions": permissions,
 				"data-has-preview": fileData.hasPreview !== false,
 				"data-e2eencrypted": fileData.isEncrypted === true
@@ -1552,14 +1462,10 @@
 			td = $('<td class="filename"></td>');
 
 
-			var spec = this.fileActions.getDefaultFileAction(mime, type, permissions);
 			// linkUrl
 			if (mime === 'httpd/unix-directory') {
 				linkUrl = this.linkTo(path + '/' + name);
 			}
-			else if (spec && spec.action) {
-				linkUrl = this.getDefaultActionUrl(path, fileData.id);
-			}
 			else {
 				linkUrl = this.getDownloadUrl(name, path, type === 'dir');
 			}
@@ -1567,9 +1473,6 @@
 				"class": "name",
 				"href": linkUrl
 			});
-			if (this._defaultFileActionsDisabled) {
-				linkElem.addClass('disabled');
-			}
 
 			linkElem.append('<div class="thumbnail-wrapper"><div class="thumbnail" style="background-image:url(' + icon + ');"></div></div>');
 
@@ -1637,22 +1540,20 @@
 			td.append(linkElem);
 			tr.append(td);
 
-			var isDarkTheme = OCA.Accessibility && OCA.Accessibility.theme === 'dark'
-
 			try {
 				var maxContrastHex = window.getComputedStyle(document.documentElement)
-					.getPropertyValue('--color-text-maxcontrast').trim()
-				if (maxContrastHex.length < 4) {
-					throw Error();
-				}
+					.getPropertyValue('--color-text-maxcontrast')
 				var maxContrast = parseInt(maxContrastHex.substring(1, 3), 16)
 			} catch(error) {
-				var maxContrast = isDarkTheme ? 130 : 118
+				var maxContrast = OCA.Accessibility
+					&& OCA.Accessibility.theme === 'themedark'
+						? '130'
+						: '118'
 			}
 
 			// size column
 			if (typeof(fileData.size) !== 'undefined' && fileData.size >= 0) {
-				simpleSize = OC.Util.humanFileSize(parseInt(fileData.size, 10), true);
+				simpleSize = humanFileSize(parseInt(fileData.size, 10), true);
 				// rgb(118, 118, 118) / #767676
 				// min. color contrast for normal text on white background according to WCAG AA
 				sizeColor = Math.round(118-Math.pow((fileData.size/(1024*1024)), 2));
@@ -1663,7 +1564,7 @@
 					sizeColor = maxContrast;
 				}
 
-				if (isDarkTheme) {
+				if (OCA.Accessibility && OCA.Accessibility.theme === 'themedark') {
 					sizeColor = Math.abs(sizeColor);
 					// ensure that the dimmest color is still readable
 					// min. color contrast for normal text on black background according to WCAG AA
@@ -1691,7 +1592,7 @@
 				modifiedColor = maxContrast;
 			}
 
-			if (isDarkTheme) {
+			if (OCA.Accessibility && OCA.Accessibility.theme === 'themedark') {
 				modifiedColor = Math.abs(modifiedColor);
 
 				// ensure that the dimmest color is still readable
@@ -2176,10 +2077,6 @@
 			return OCA.Files.Files.getDownloadUrl(files, dir || this.getCurrentDirectory(), isDir);
 		},
 
-		getDefaultActionUrl: function(path, id) {
-			return this.linkTo(path) + "&openfile="+id;
-		},
-
 		getUploadUrl: function(fileName, dir) {
 			if (_.isUndefined(dir)) {
 				dir = this.getCurrentDirectory();
@@ -2220,12 +2117,6 @@
 			urlSpec.y = Math.ceil(urlSpec.y);
 			urlSpec.forceIcon = 0;
 
-			/**
-			 * Images are cropped to a square by default. Append a=1 to the URL
-			 *  if the user wants to see images with original aspect ratio.
-			 */
-			urlSpec.a = this._filesConfig.get('cropimagepreviews') ? 0 : 1;
-
 			if (typeof urlSpec.fileId !== 'undefined') {
 				delete urlSpec.file;
 				return OC.generateUrl('/core/preview?') + $.param(urlSpec);
@@ -2846,7 +2737,7 @@
 		 *
 		 * @since 8.2
 		 */
-		createFile: function(name, options) {
+		createFile: function(name) {
 			var self = this;
 			var deferred = $.Deferred();
 			var promise = deferred.promise();
@@ -2870,8 +2761,7 @@
 				)
 				.done(function() {
 					// TODO: error handling / conflicts
-					options = _.extend({scrollTo: true}, options || {});
-					self.addAndFetchFileInfo(targetPath, '', options).then(function(status, data) {
+					self.addAndFetchFileInfo(targetPath, '', {scrollTo: true}).then(function(status, data) {
 						deferred.resolve(status, data);
 					}, function() {
 						OC.Notification.show(t('files', 'Could not create file "{file}"',
@@ -3005,8 +2895,8 @@
 					deferred.resolve(status, data);
 				})
 				.fail(function(status) {
-					OCP.Toast.error(
-						t('files', 'Could not fetch file details "{file}"', { file: fileName })
+					OC.Notification.show(t('files', 'Could not create file "{file}"',
+						{file: name}), {type: 'error'}
 					);
 					deferred.reject(status);
 				});
@@ -3245,12 +3135,7 @@
 				$('#searchresults').addClass('filter-empty');
 				$('#searchresults .emptycontent').addClass('emptycontent-search');
 				if ( $('#searchresults').length === 0 || $('#searchresults').hasClass('hidden') ) {
-					var error;
-					if (this._filter.length > 2) {
-						error = t('files', 'No search results in other folders for {tag}{filter}{endtag}', {filter:this._filter});
-					} else {
-						error = t('files', 'Enter more than two characters to search in other folders');
-					}
+					var error = t('files', 'No search results in other folders for {tag}{filter}{endtag}', {filter:this._filter});
 					this.$el.find('.nofilterresults').removeClass('hidden').
 						find('p').html(error.replace('{tag}', '<strong>').replace('{endtag}', '</strong>'));
 				}
@@ -3271,7 +3156,17 @@
 		getFilter:function(filter) {
 			return this._filter;
 		},
-
+		/**
+		 * update the search object to use this filelist when filtering
+		 */
+		updateSearch:function() {
+			if (OCA.Search.files) {
+				OCA.Search.files.setFileList(this);
+			}
+			if (OC.Search) {
+				OC.Search.clear();
+			}
+		},
 		/**
 		 * Update UI based on the current selection
 		 */
@@ -3708,25 +3603,8 @@
 		 * Register a tab view to be added to all views
 		 */
 		registerTabView: function(tabView) {
-			console.warn('registerTabView is deprecated! It will be removed in nextcloud 20.');
-			const enabled = tabView.canDisplay || undefined
-			if (tabView.id) {
-				OCA.Files.Sidebar.registerTab(new OCA.Files.Sidebar.Tab({
-					id: tabView.id,
-					name: tabView.getLabel(),
-					icon: tabView.getIcon(),
-					mount: function(el, fileInfo) {
-						tabView.setFileInfo(new OCA.Files.FileInfoModel(fileInfo))
-						el.appendChild(tabView.el)
-					},
-					update: function(fileInfo) {
-						tabView.setFileInfo(new OCA.Files.FileInfoModel(fileInfo))
-					},
-					destroy: function() {
-						tabView.el.remove()
-					},
-					enabled: enabled
-				}))
+			if (this._detailsView) {
+				this._detailsView.addTabView(tabView);
 			}
 		},
 
@@ -3734,9 +3612,8 @@
 		 * Register a detail view to be added to all views
 		 */
 		registerDetailView: function(detailView) {
-			console.warn('registerDetailView is deprecated! It will be removed in nextcloud 20.');
-			if (detailView.el) {
-				OCA.Files.Sidebar.registerSecondaryView(detailView)
+			if (this._detailsView) {
+				this._detailsView.addDetailView(detailView);
 			}
 		},
 
@@ -3762,18 +3639,6 @@
 			}
 
 			return null;
-		},
-
-		registerHeader: function(header) {
-			this.headers.push(
-				_.defaults(header, { order: 0 })
-			);
-		},
-
-		registerFooter: function(footer) {
-			this.footers.push(
-				_.defaults(footer, { order: 0 })
-			);
 		}
 	};
 
@@ -3855,7 +3720,7 @@
 	OCA.Files.FileList = FileList;
 })();
 
-window.addEventListener('DOMContentLoaded', function() {
+$(document).ready(function() {
 	// FIXME: unused ?
 	OCA.Files.FileList.useUndo = (window.onbeforeunload)?true:false;
 	$(window).on('beforeunload', function () {
@@ -3863,5 +3728,8 @@
 			OCA.Files.FileList.lastAction();
 		}
 	});
+	$(window).on('unload', function () {
+		$(window).trigger('beforeunload');
+	});
 
 });
