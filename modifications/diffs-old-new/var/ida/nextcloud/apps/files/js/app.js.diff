--- /var/ida/nextcloud-new/apps/files/js/app.js	2021-10-27 15:54:06.622751749 +0000
+++ /var/ida/nextcloud-old/apps/files/js/app.js	2021-10-27 10:25:30.394495083 +0000
@@ -40,8 +40,6 @@
 		 */
 		fileList: null,
 
-		currentFileList: null,
-
 		/**
 		 * Backbone model for storing files preferences
 		 */
@@ -53,33 +51,34 @@
 		initialize: function() {
 			this.navigation = new OCA.Files.Navigation($('#app-navigation'));
 			this.$showHiddenFiles = $('input#showhiddenfilesToggle');
-			var showHidden = $('#showHiddenFiles').val() === "1";
+            // In IDA we always show hidden files
+			// var showHidden = $('#showHiddenFiles').val() === "1";
+			var showHidden = true;
 			this.$showHiddenFiles.prop('checked', showHidden);
 
-			// crop image previews
-			this.$cropImagePreviews = $('input#cropimagepreviewsToggle');
-			var cropImagePreviews = $('#cropImagePreviews').val() === "1";
-			this.$cropImagePreviews.prop('checked', cropImagePreviews);
 
 			if ($('#fileNotFound').val() === "1") {
 				OC.Notification.show(t('files', 'File could not be found'), {type: 'error'});
 			}
 
 			this._filesConfig = new OC.Backbone.Model({
-				showhidden: showHidden,
-				cropimagepreviews: cropImagePreviews,
+				showhidden: showHidden
 			});
 
 			var urlParams = OC.Util.History.parseUrlQuery();
 			var fileActions = new OCA.Files.FileActions();
 			// default actions
 			fileActions.registerDefaultActions();
+			// legacy actions
+			fileActions.merge(window.FileActions);
 			// regular actions
 			fileActions.merge(OCA.Files.fileActions);
 
 			this._onActionsUpdated = _.bind(this._onActionsUpdated, this);
 			OCA.Files.fileActions.on('setDefault.app-files', this._onActionsUpdated);
 			OCA.Files.fileActions.on('registerAction.app-files', this._onActionsUpdated);
+			window.FileActions.on('setDefault.app-files', this._onActionsUpdated);
+			window.FileActions.on('registerAction.app-files', this._onActionsUpdated);
 
 			this.files = OCA.Files.Files;
 
@@ -93,22 +92,26 @@
 					scrollTo: urlParams.scrollto,
 					filesClient: OC.Files.getClient(),
 					multiSelectMenu: [
+						/*
 						{
 							name: 'copyMove',
 							displayName:  t('files', 'Move or copy'),
 							iconClass: 'icon-external',
 						},
+						*/
 						{
 							name: 'download',
 							displayName:  t('files', 'Download'),
 							iconClass: 'icon-download',
 						},
 						OCA.Files.FileList.MultiSelectMenuActions.ToggleSelectionModeAction,
+						/*
 						{
 							name: 'delete',
 							displayName: t('files', 'Delete'),
 							iconClass: 'icon-delete',
 						},
+						*/
 					],
 					sorting: {
 						mode: $('#defaultFileSorting').val(),
@@ -119,7 +122,6 @@
 					maxChunkSize: OC.appConfig.files && OC.appConfig.files.max_chunk_size
 				}
 			);
-			this.updateCurrentFileList(this.fileList)
 			this.files.initialize();
 
 			// for backward compatibility, the global FileList will
@@ -137,7 +139,6 @@
 			});
 
 			this._debouncedPersistShowHiddenFilesState = _.debounce(this._persistShowHiddenFilesState, 1200);
-			this._debouncedPersistCropImagePreviewsState = _.debounce(this._persistCropImagePreviewsState, 1200);
 
 			if (sessionStorage.getItem('WhatsNewServerCheck') < (Date.now() - 3600*1000)) {
 				OCP.WhatsNew.query(); // for Nextcloud server
@@ -155,6 +156,8 @@
 			this.files = null;
 			OCA.Files.fileActions.off('setDefault.app-files', this._onActionsUpdated);
 			OCA.Files.fileActions.off('registerAction.app-files', this._onActionsUpdated);
+			window.FileActions.off('setDefault.app-files', this._onActionsUpdated);
+			window.FileActions.off('registerAction.app-files', this._onActionsUpdated);
 		},
 
 		_onActionsUpdated: function(ev) {
@@ -170,28 +173,6 @@
 		},
 
 		/**
-		 * Set the currently active file list
-		 *
-		 * Due to the file list implementations being registered after clicking the
-		 * navigation item for the first time, OCA.Files.App is not aware of those until
-		 * they have initialized themselves. Therefore the files list needs to call this
-		 * method manually
-		 *
-		 * @param {OCA.Files.FileList} newFileList
-		 */
-		updateCurrentFileList: function(newFileList) {
-			this.currentFileList = newFileList;
-		},
-
-		/**
-		 * Return the currently active file list
-		 * @return {?OCA.Files.FileList}
-		 */
-		getCurrentFileList: function () {
-			return this.currentFileList;
-		},
-
-		/**
 		 * Returns the container of the currently visible app.
 		 *
 		 * @return app container
@@ -237,7 +218,6 @@
 
 			$('#app-navigation').on('itemChanged', _.bind(this._onNavigationChanged, this));
 			this.$showHiddenFiles.on('change', _.bind(this._onShowHiddenFilesChange, this));
-			this.$cropImagePreviews.on('change', _.bind(this._onCropImagePreviewsChange, this));
 		},
 
 		/**
@@ -246,7 +226,9 @@
 		 * @returns {undefined}
 		 */
 		_onShowHiddenFilesChange: function() {
-			var show = this.$showHiddenFiles.is(':checked');
+            // In IDA hidden files are always shown
+			//var show = this.$showHiddenFiles.is(':checked');
+			var show = true;
 			this._filesConfig.set('showhidden', show);
 			this._debouncedPersistShowHiddenFilesState();
 		},
@@ -257,36 +239,15 @@
 		 * @returns {undefined}
 		 */
 		_persistShowHiddenFilesState: function() {
-			var show = this._filesConfig.get('showhidden');
+            // In IDA hidden files are always shown
+			//var show = this.$showHiddenFiles.is(':checked');
+			var show = true;
 			$.post(OC.generateUrl('/apps/files/api/v1/showhidden'), {
 				show: show
 			});
 		},
 
 		/**
-		 * Toggle cropping image previews according to the settings checkbox
-		 *
-		 * @returns void
-		 */
-		_onCropImagePreviewsChange: function() {
-			var crop = this.$cropImagePreviews.is(':checked');
-			this._filesConfig.set('cropimagepreviews', crop);
-			this._debouncedPersistCropImagePreviewsState();
-		},
-
-		/**
-		 * Persist crop image previews preference on the server
-		 *
-		 * @returns void
-		 */
-		_persistCropImagePreviewsState: function() {
-			var crop = this._filesConfig.get('cropimagepreviews');
-			$.post(OC.generateUrl('/apps/files/api/v1/cropimagepreviews'), {
-				crop: crop
-			});
-		},
-
-		/**
 		 * Event handler for when the current navigation item has changed
 		 */
 		_onNavigationChanged: function(e) {
@@ -386,7 +347,7 @@
 	};
 })();
 
-window.addEventListener('DOMContentLoaded', function() {
+$(document).ready(function() {
 	// wait for other apps/extensions to register their event handlers and file actions
 	// in the "ready" clause
 	_.defer(function() {
