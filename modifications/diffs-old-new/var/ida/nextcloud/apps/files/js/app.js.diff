42a43,44
> 		currentFileList: null,
> 
54,56c56
<             // In IDA we always show hidden files
< 			// var showHidden = $('#showHiddenFiles').val() === "1";
< 			var showHidden = true;
---
> 			var showHidden = $('#showHiddenFiles').val() === "1";
58a59,62
> 			// crop image previews
> 			this.$cropImagePreviews = $('input#cropimagepreviewsToggle');
> 			var cropImagePreviews = $('#cropImagePreviews').val() === "1";
> 			this.$cropImagePreviews.prop('checked', cropImagePreviews);
65c69,70
< 				showhidden: showHidden
---
> 				showhidden: showHidden,
> 				cropimagepreviews: cropImagePreviews,
72,73d76
< 			// legacy actions
< 			fileActions.merge(window.FileActions);
80,81d82
< 			window.FileActions.on('setDefault.app-files', this._onActionsUpdated);
< 			window.FileActions.on('registerAction.app-files', this._onActionsUpdated);
95d95
< 						/*
101d100
< 						*/
108d106
< 						/*
114d111
< 						*/
124a122
> 			this.updateCurrentFileList(this.fileList)
141a140
> 			this._debouncedPersistCropImagePreviewsState = _.debounce(this._persistCropImagePreviewsState, 1200);
159,160d157
< 			window.FileActions.off('setDefault.app-files', this._onActionsUpdated);
< 			window.FileActions.off('registerAction.app-files', this._onActionsUpdated);
175a173,194
> 		 * Set the currently active file list
> 		 *
> 		 * Due to the file list implementations being registered after clicking the
> 		 * navigation item for the first time, OCA.Files.App is not aware of those until
> 		 * they have initialized themselves. Therefore the files list needs to call this
> 		 * method manually
> 		 *
> 		 * @param {OCA.Files.FileList} newFileList
> 		 */
> 		updateCurrentFileList: function(newFileList) {
> 			this.currentFileList = newFileList;
> 		},
> 
> 		/**
> 		 * Return the currently active file list
> 		 * @return {?OCA.Files.FileList}
> 		 */
> 		getCurrentFileList: function () {
> 			return this.currentFileList;
> 		},
> 
> 		/**
220a240
> 			this.$cropImagePreviews.on('change', _.bind(this._onCropImagePreviewsChange, this));
229,231c249
<             // In IDA hidden files are always shown
< 			//var show = this.$showHiddenFiles.is(':checked');
< 			var show = true;
---
> 			var show = this.$showHiddenFiles.is(':checked');
242,244c260
<             // In IDA hidden files are always shown
< 			//var show = this.$showHiddenFiles.is(':checked');
< 			var show = true;
---
> 			var show = this._filesConfig.get('showhidden');
250a267,289
> 		 * Toggle cropping image previews according to the settings checkbox
> 		 *
> 		 * @returns void
> 		 */
> 		_onCropImagePreviewsChange: function() {
> 			var crop = this.$cropImagePreviews.is(':checked');
> 			this._filesConfig.set('cropimagepreviews', crop);
> 			this._debouncedPersistCropImagePreviewsState();
> 		},
> 
> 		/**
> 		 * Persist crop image previews preference on the server
> 		 *
> 		 * @returns void
> 		 */
> 		_persistCropImagePreviewsState: function() {
> 			var crop = this._filesConfig.get('cropimagepreviews');
> 			$.post(OC.generateUrl('/apps/files/api/v1/cropimagepreviews'), {
> 				crop: crop
> 			});
> 		},
> 
> 		/**
350c389
< $(document).ready(function() {
---
> window.addEventListener('DOMContentLoaded', function() {
